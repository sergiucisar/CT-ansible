---
- name: Channing sysctl parameter for redis performance
  sysctl:
    name: vm.overcommit_memory
    value: "1"
    state: present

- name: Updating maxconn sysctl parameter for redis
  sysctl:
    name: net.core.somaxconn
    value: "65365"
    state: present

- name: Disable Kernel Transparent Huge Pages
  command: "echo never > /sys/kernel/mm/transparent_hugepage/enabled"
  changed_when: false

- name: Check if redis is previously installed or not
  stat:
    path: "/usr/local/bin/redis-server"
  register: redis_status

- name: Download redis artifact
  unarchive:
    src: "http://download.redis.io/releases/redis-{{ redis_version }}.tar.gz"
    dest: /opt/
    remote_src: yes
  when: >
    not redis_status.stat.exists or
    upgrade_redis

- name: Distclean
  make:
    chdir: "/opt/redis-{{ redis_version }}"
    target: distclean
  ignore_errors: yes

- name: Build runtime dependencies for redis
  make:
    chdir: "/opt/redis-{{ redis_version }}"
  when: >
    not redis_status.stat.exists or
    upgrade_redis

- name: Install redis server
  make:
    chdir: "/opt/redis-{{ redis_version }}"
    target: install
  when: >
    not redis_status.stat.exists or
    upgrade_redis

- name: Deleting the downloaded redis package
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "/opt/redis-{{ redis_version }}.tar.gz"
    - "/opt/redis-{{ redis_version }}"
  when: >
    not redis_status.stat.exists or
    upgrade_redis

- name: Creating group for redis
  group:
    name: "redis"
    state: present

- name: Creating system user for redis
  user:
    name: "redis"
    group: "redis"
    shell: /sbin/nologin
    password: "!!"
    createhome: no
    system: yes
    state: present

- name: Creating logfile directory for standalone setup
  file:
    path: "{{ redis_log_dir }}"
    state: directory
    recurse: yes
    owner: redis
    group: redis

- name: Creating redis data directory
  file:
    path: "{{ redis_dir }}"
    state: directory
    recurse: yes
    owner: redis
    group: redis

- name: Create "{{ redis_conf_file_location }}" directory
  file:
    path: "{{ redis_conf_file_location }}"
    state: directory
    recurse: yes
    owner: redis
    group: redis
